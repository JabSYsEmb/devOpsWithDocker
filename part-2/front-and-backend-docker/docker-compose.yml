version: '3'

services:
  backend:
    build: 
      context: ./backend-docker
    ports:
      - 8080
    environment:
      - REQUEST_ORIGIN=http://frontend.colasloth.com
      - REDIS_HOST=redis
      - POSTGRES_HOST=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=example
      - POSTGRES_DATABASE=postgres
      - VIRTUAL_HOST=backend.colasloth.com

    container_name: backend
    #    networks:
    #      - redis-network

  redis:
    image: redis:6.2.6
    ports:
      - 6379
    container_name: redis
    environment:
     - VIRTUAL_HOST=redis.colasloth.com
    volumes:
    - ./redis/conf/:/usr/local/etc/redis/
    - ./redis:/var/lib/redis
    command: "redis-server /usr/local/etc/redis/redis.conf"

  frontend:
    build:
      context: ./frontend-docker
    ports:
      - 5000
    environment:
      # - RREACT_APP_BACKEND_URL=http://backend.colasloth.com
      - VIRTUAL_HOST=frontend.colasloth.com
    container_name: frontend

  db:
    image: postgres:13.2-alpine
    environment:
      - POSTGRES_PASSWORD=example
      - VIRTUAL_HOST=db.colasloth.com
    container_name: db
    restart: unless-stopped

  adminer:
    image: adminer:4
    ports:
      - 8080
    environment:
      - VIRTUAL_HOST=adminer.colasloth.com
    container_name: adminer
  
  hello:
    image: nginx:alpine
    volumes:
      - ./proxy/hello.html:/usr/share/nginx/html/index.html:ro
    environment:
      - VIRTUAL_HOST=hello.colasloth.com

  world:
    image: nginx:alpine
    volumes:
      - ./proxy/world.html:/usr/share/nginx/html/index.html:ro
    environment:
      - VIRTUAL_HOST=world.colasloth.com

  proxy:
    image: jwilder/nginx-proxy
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - 80:80
    container_name: proxy

volumes:
  database:
